################################################################################
#
# libmpp
#
################################################################################

# add dependencies
ifeq ($(RV_BOARD_1108),y)
MPP_DEPENDENCIES = libion
endif

MPP_CONF_OPTS += -G "Unix Makefiles" -DRKPLATFORM=ON

ifeq ($(BUILDROOT_ENABLE_LIBDRM),y)
MPP_CONF_OPTS += -DHAVE_DRM=ON
endif

MPP_CONFIGURE_DEP_FILES = $(realpath $(shell find $(MPP_PKGDIR)/../patch))

MPP_TARGET_FILES = $(shell find $(MPP_BUILDDIR) -name *.so.0)

ifeq ($(RV_TARGET_MPP),y)
RV_FINAL_LIBS += librockchip_mpp.so librockchip_mpp.so.0 librockchip_mpp.so.1 \
	librockchip_vpu.so librockchip_vpu.so.0 librockchip_vpu.so.1
endif

ifneq ($(RV_TARGET_MPP_ENABLE_AVSD),y)
MPP_CONF_OPTS += -DENABLE_AVSD=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_AVSD

ifneq ($(RV_TARGET_MPP_ENABLE_H263D),y)
MPP_CONF_OPTS += -DENABLE_H263D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_H263D

ifneq ($(RV_TARGET_MPP_ENABLE_H265D),y)
MPP_CONF_OPTS += -DENABLE_H265D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_H265D

ifneq ($(RV_TARGET_MPP_ENABLE_MPEG2D),y)
MPP_CONF_OPTS += -DENABLE_MPEG2D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_MPEG2D

ifneq ($(RV_TARGET_MPP_ENABLE_MPEG4D),y)
MPP_CONF_OPTS += -DENABLE_MPEG4D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_MPEG4D

ifneq ($(RV_TARGET_MPP_ENABLE_VP8D),y)
MPP_CONF_OPTS += -DENABLE_VP8D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_VP8D

ifneq ($(RV_TARGET_MPP_ENABLE_VP9D),y)
MPP_CONF_OPTS += -DENABLE_VP9D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_VP9D

ifneq ($(RV_TARGET_MPP_ENABLE_H264E),y)
MPP_CONF_OPTS += -DENABLE_H264E=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_H264E

ifneq ($(RV_TARGET_MPP_ENABLE_H264D),y)
MPP_CONF_OPTS += -DENABLE_H264D=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_H264D

ifneq ($(RV_TARGET_MPP_ENABLE_JPEGE),y)
MPP_CONF_OPTS += -DENABLE_JPEGE=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_JPEGE

ifneq ($(RV_TARGET_MPP_ENABLE_JPEGD),y)
MPP_CONF_OPTS += -DENABLE_JPEGD=OFF
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_ENABLE_JPEGD

ifeq ($(RV_TARGET_MPP_ENABLE_H264D),y)
#$(error RV_TARGET_MPP_H264D_HEAD_BUF_MAX_SIZE: $(call qtrip,$(RV_TARGET_MPP_H264D_HEAD_BUF_MAX_SIZE)))
MPP_CONF_OPTS += -DH264D_INPUT_NO_BFRAME=$(if $(RV_TARGET_MPP_H264D_INPUT_NO_BFRAME),1,0) \
	-DH264D_BITSTREAM_MAX_SIZE=$(call qstrip,$(RV_TARGET_MPP_H264D_BITSTREAM_MAX_SIZE)) \
	-DH264D_HEAD_BUF_MAX_SIZE=$(call qstrip,$(RV_TARGET_MPP_H264D_HEAD_BUF_MAX_SIZE)) \
	-DH264D_NALU_BUF_MAX_SIZE=$(call qstrip,$(RV_TARGET_MPP_H264D_NALU_BUF_MAX_SIZE)) \
	-DH264D_SODB_BUF_MAX_SIZE=$(call qstrip,$(RV_TARGET_MPP_H264D_SODB_BUF_MAX_SIZE)) \
	-DH264D_ERROR_INFO_MAX_SIZE=$(call qstrip,$(RV_TARGET_MPP_H264D_ERROR_INFO_MAX_SIZE))
endif
MPP_CONFIGURE_DEP_CONFIGS += RV_TARGET_MPP_H264D_INPUT_NO_BFRAME \
	RV_TARGET_MPP_H264D_BITSTREAM_MAX_SIZE \
	RV_TARGET_MPP_H264D_HEAD_BUF_MAX_SIZE \
	RV_TARGET_MPP_H264D_NALU_BUF_MAX_SIZE \
	RV_TARGET_MPP_H264D_SODB_BUF_MAX_SIZE \
	RV_TARGET_MPP_H264D_ERROR_INFO_MAX_SIZE

$(eval $(rv-generic-cmake))
